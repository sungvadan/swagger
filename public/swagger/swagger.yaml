openapi: 3.0.0
info:
  title: 'This is a test with swagger API'
  version: '0.1'
servers:
  -
    url: 'http://localhost:8000'
    description: 'root of api'
  -
    url: 'http://another-endpoint:8000'
    description: 'root of api'
paths:
  '/post/{id}':
    get:
      operationId: 'App\Controller\PostController::index'
      parameters:
        -
          name: id
          in: path
          description: 'id of article'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'get an article by id'
          content:
            application/json:
              schema:
                description: 'title of the article'
                type: string
  /article:
    get:
      operationId: 'App\Controller\PostController::article'
      responses:
        '200':
          description: 'get an article'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      operationId: 'App\Controller\PostController::create'
      requestBody:
        $ref: '#/components/requestBodies/createArticle'
      responses:
        '201':
          description: 'article is successfully created'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
      security:
        - bearer
components:
  schemas:
    Article:
      properties:
        id:
          description: 'id of the article'
          type: integer
          example: '1'
        title:
          description: 'the title of the article'
          type: string
          nullable: true
        content:
          description: 'the title of the article'
          type: string
          nullable: true
        createdAt:
          description: 'the title of the article'
          type: string
          format: date-time
          nullable: true
      type: object
  requestBodies:
    createArticle:
      required: true
      content:
        application/json:
          schema:
            required:
              - title
              - content
            properties:
              title:
                type: string
              content:
                type: string
            type: object
  securitySchemes:
    bearer:
      type: apiKey
      bearerFormat: JWT
